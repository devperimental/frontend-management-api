name: PR Pipeline
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
env:
  nuget-username: chrisxpr
  src-dir: ./src/code
  coverage-threshold: 0
  repo-organisation: architected
  team-pat: ${{ secrets.NUGET_PAT}}
  aws-secret: ${{ secrets.AWS_SECRET}}
  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
  aws-region: ap-southeast-2
  ecr-repo-name: devperimental/service-registry
  target-environment: x-${{ github.event.number}}
concurrency: alpha-${{ github.ref}}
jobs:
  dotnetBuild:
    name: Build and Test
    runs-on: ubuntu-latest
    environment: dev
    timeout-minutes: 20
    steps:
      - name: Checkout action
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: buildAndTest
        uses: devperimental/composite-action-library/dotnet-build-and-test@v2
        with:
          nuget-username: ${{ env.nuget-username }}
          src-dir: ${{ env.src-dir }}
          coverage-threshold: ${{ env.coverage-threshold }}
          repo-organisation: ${{ env.repo-organisation }}
          team-pat: ${{ env.team-pat }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.aws-access-key-id }}
          aws-secret-access-key: ${{ env.aws-secret }}
          aws-region: ${{ env.aws-region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ecr-repo-name }}
          IMAGE_TAG: ${{ env.target-environment}}
        run: |
          cd ./src/code
          docker build --build-arg NUGET_USERNAME=${{ env.nuget-username }} --build-arg NUGET_PAT=${{ env.team-pat }} --build-arg NUGET_ORGANISATION=${{ env.repo-organisation }} -t $ECR_REGISTRY/$ECR_REPOSITORY/management-api:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY/management-api:$IMAGE_TAG
          echo "name=image::$ECR_REGISTRY/$ECR_REPOSITORY/management-api:$IMAGE_TAG" >> $GITHUB_OUTPUT